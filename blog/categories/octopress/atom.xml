<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | HelcropS on Earth]]></title>
  <link href="http://helcrops.github.com/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://helcrops.github.com/"/>
  <updated>2013-03-08T19:31:32+08:00</updated>
  <id>http://helcrops.github.com/</id>
  <author>
    <name><![CDATA[Helcrops]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress Bloging Basics]]></title>
    <link href="http://helcrops.github.com/blog/2013/03/08/octopress-bloging-basics/"/>
    <updated>2013-03-08T18:45:00+08:00</updated>
    <id>http://helcrops.github.com/blog/2013/03/08/octopress-bloging-basics</id>
    <content type="html"><![CDATA[<h1>写博客的基础知识</h1>

<p>octopress提供一些rake工具通过元数据并依据jekyll的命名规范创建预览文章和页面。它也产生一个全局的并基于jekyll的目录。</p>

<!-- more -->


<h2>博客文章</h2>

<p>博客文章必须存储在source/_posts，并且依据jekyll的命名规范YYYY-MM-DD-post-title.markdown。</p>

<h3>语法</h3>

<p>rake new_post["title"] 中文支持如何？</p>

<p>new_post需要一个文章题目，并且会去除不良的url字符。默认扩展名是markdown，你可以在Rakefile中设置。</p>

<h3>例子</h3>

<pre><code>rake new_post["Zombie Ninjas Attack: A survivor's retrospective"].
</code></pre>

<p>文件名决定文章的链接。根据默认的permalink settings，url类似http://site.com/blog/2011/07/03/zombie-ninjas-attack-a-survivors-retrospective/index.html
用编辑器打开这个文章，在source/_post中，你会发现一些yaml语法的说明，告诉jekyll如何展示文章和页面。</p>

<pre><code>---
layout: post
title: "Zombie Ninjas Attack: A survivor's retrospective"
date: 2011-07-03 5:59
comments: true
external-url:
categories:
---
</code></pre>

<p>你可以关闭评论和标签。如果是多人博客，你可以设置作者author:name。如果是草稿，你可以published:false。如果是一个链接的文章，添加一个external-url就行了。
添加标签：</p>

<pre><code># One category
categories: Sass

# Multiple categories example 1
categories: [CSS3, Sass, Media Queries]

# Multiple categories example 2
categories:
- CSS3
- Sass
- Media Queries
</code></pre>

<h2>新页面</h2>

<p>你可以在页面的任何地方添加新页面，jekyll会处理它们。链接地址会直接添加到文件路径，所以about.markdown会变成site.com/about.html。如果你更喜欢site.com/about/的链接，你应该创建一个页面类似about/index.markdown.octopress的rake命令如下</p>

<pre><code>rake new_page[super-awesome]
# creates /source/super-  awesome/index.markdown

rake new_page[super-awesome/page.html]
# creates /source/super-awesome/page.html
</code></pre>

<p>默认扩展名还是markdown你可以自行设置。</p>

<pre><code>---
layout: page
title: "Super Awesome"
date: 2011-07-03 5:59
comments: true
sharing: true
footer: true
---
</code></pre>

<p>开头是一段yaml语法。你可以设置是否分享？</p>

<h2>内容</h2>

<p>页面和文章的内容由你在博客文件中指定的markup引擎生成（冤啊，没指定！）。另外，你也可以使用jekyll中的液态模版功能。
嵌入一个<!-- more --\>在你的文章中能到到，阅读更多的效果。</p>

<h2>生成和预览</h2>

<pre><code>rake generate   # Generates posts and pages into the public directory
rake watch      # Watches source/ and sass/ for changes and regenerates
rake preview    # Watches, and mounts a webserver at http://localhost:4000
</code></pre>

<h2>推送到github</h2>

<pre><code>rake generate
rake deploy
</code></pre>

<p>github上有两个分支，rake
deploy到最终的master分支；另一个分支是origin，存放源文件，要用git把源文件推到这里。</p>
]]></content>
  </entry>
  
</feed>
